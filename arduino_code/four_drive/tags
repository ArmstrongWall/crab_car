!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DEBUG	PinChangeInt.h	132;"	d
INLINE_PCINT	PinChangeInt.h	148;"	d
INLINE_PCINT	PinChangeInt.h	149;"	d
INLINE_PCINT	PinChangeInt.h	160;"	d
INLINE_PCINT	PinChangeInt.h	177;"	d
ISR	PinChangeInt.h	/^ISR(PCINT0_vect) {$/;"	f
ISR	PinChangeInt.h	/^ISR(PCINT1_vect) {$/;"	f
ISR	PinChangeInt.h	/^ISR(PCINT2_vect){ $/;"	f
ISR	PinChangeInt.h	/^ISR(PORTBVECT) {$/;"	f
ISR	PinChangeInt.h	/^ISR(PORTCVECT) {$/;"	f
ISR	PinChangeInt.h	/^ISR(PORTDVECT){ $/;"	f
InitPid	four_drive.c	/^    void InitPid()$/;"	f
Led	four_drive.c	/^int Led = 13;$/;"	v
NO_PORTA_PINCHANGES	PinChangeInt.h	154;"	d
NO_PORTA_PINCHANGES	PinChangeInt.h	170;"	d
NO_PORTC_PINCHANGES	PinChangeInt.h	155;"	d
NO_PORTD_PINCHANGES	PinChangeInt.h	156;"	d
NO_PORTJ_PINCHANGES	PinChangeInt.h	163;"	d
NO_PORTK_PINCHANGES	PinChangeInt.h	164;"	d
PCICRbit	PinChangeInt.h	/^	const		uint8_t			PCICRbit;$/;"	m	class:PCintPort
PCIFRbug	PinChangeInt.h	/^	static volatile uint8_t PCIFRbug;$/;"	m	class:PCintPort
PCIFRbug	PinChangeInt.h	/^volatile uint8_t PCintPort::PCIFRbug=0;$/;"	m	class:PCintPort
PCINT_VERSION	PinChangeInt.h	10;"	d
PCIntvoidFuncPtr	PinChangeInt.h	/^typedef void (*PCIntvoidFuncPtr)(void);$/;"	t
PCattachInterrupt	PinChangeInt.h	184;"	d
PCdetachInterrupt	PinChangeInt.h	183;"	d
PCgetArduinoPin	PinChangeInt.h	185;"	d
PCint	PinChangeInt.h	/^void PCintPort::PCint() {$/;"	f	class:PCintPort
PCintFunc	PinChangeInt.h	/^		PCIntvoidFuncPtr PCintFunc;$/;"	m	class:PCintPort::PCintPin
PCintPin	PinChangeInt.h	/^		PCintPin() :$/;"	f	class:PCintPort::PCintPin
PCintPin	PinChangeInt.h	/^	class PCintPin {$/;"	c	class:PCintPort
PCintPort	PinChangeInt.h	/^	PCintPort(int index,int pcindex, volatile uint8_t& maskReg) :$/;"	f	class:PCintPort
PCintPort	PinChangeInt.h	/^class PCintPort {$/;"	c
PINLED	PinChangeInt.h	288;"	d
PORTBVECT	PinChangeInt.h	584;"	d
PORTBVECT	PinChangeInt.h	588;"	d
PORTCVECT	PinChangeInt.h	585;"	d
PORTCVECT	PinChangeInt.h	589;"	d
PORTDVECT	PinChangeInt.h	586;"	d
PORTDVECT	PinChangeInt.h	590;"	d
PinChangeInt_h	PinChangeInt.h	122;"	d
SampleTime2	four_drive.c	/^unsigned long SampleTime2=20;\/\/ 采样时间$/;"	v
Setpoint_AL	four_drive.c	/^double Setpoint_AL=0;$/;"	v
Setpoint_AR	four_drive.c	/^double Setpoint_AR=0;$/;"	v
Setpoint_BL	four_drive.c	/^double Setpoint_BL=0;$/;"	v
Setpoint_BR	four_drive.c	/^double Setpoint_BR=0;$/;"	v
TIMEOUT	four_drive.c	8;"	d	file:
Words	four_drive.c	/^String Words;\/\/$/;"	v
__USE_PORT_A	PinChangeInt.h	167;"	d
__USE_PORT_JK	PinChangeInt.h	152;"	d
aLCount	four_drive.c	/^void aLCount()$/;"	f
aRCount	four_drive.c	/^void aRCount()$/;"	f
addPin	PinChangeInt.h	/^int8_t PCintPort::addPin(uint8_t arduinoPin, PCIntvoidFuncPtr userFunc, uint8_t mode)$/;"	f	class:PCintPort
al1	four_drive.c	/^int al1=2;$/;"	v
al2	four_drive.c	/^int al2=3;$/;"	v
al_wheel	four_drive.c	/^unsigned int al_wheel; \/\/记录U型测速模块的次数$/;"	v
alc	four_drive.c	/^int alc=11;$/;"	v
ar1	four_drive.c	/^int ar1=4;$/;"	v
ar2	four_drive.c	/^int ar2=5;$/;"	v
ar_wheel	four_drive.c	/^unsigned int ar_wheel;$/;"	v
arc	four_drive.c	/^int arc=10;$/;"	v
arduinoPin	PinChangeInt.h	/^		uint8_t arduinoPin;$/;"	m	class:PCintPort::PCintPin
arduinoPin	PinChangeInt.h	/^	static	volatile uint8_t	arduinoPin;$/;"	m	class:PCintPort
arduinoPin	PinChangeInt.h	/^volatile uint8_t PCintPort::arduinoPin=0;$/;"	m	class:PCintPort
attachInterrupt	PinChangeInt.h	/^int8_t PCintPort::attachInterrupt(uint8_t arduinoPin, PCIntvoidFuncPtr userFunc, int mode)$/;"	f	class:PCintPort
attachPinChangeInterrupt	PinChangeInt.h	60;"	d
bLCount	four_drive.c	/^  void bLCount()$/;"	f
bRCount	four_drive.c	/^void bRCount()$/;"	f
bl1	four_drive.c	/^int bl1=8;$/;"	v
bl2	four_drive.c	/^int bl2=7;$/;"	v
bl_wheel	four_drive.c	/^unsigned int bl_wheel; \/\/记录U型测速模块的次数$/;"	v
blc	four_drive.c	/^int blc=9;$/;"	v
br1	four_drive.c	/^int br1=12;$/;"	v
br2	four_drive.c	/^int br2=13;$/;"	v
br_wheel	four_drive.c	/^unsigned int br_wheel;$/;"	v
brc	four_drive.c	/^int brc=6;$/;"	v
curr	PinChangeInt.h	/^	static volatile uint8_t curr;$/;"	m	class:PCintPort
curr	PinChangeInt.h	/^volatile uint8_t PCintPort::curr=0;$/;"	m	class:PCintPort
detachInterrupt	PinChangeInt.h	/^void PCintPort::detachInterrupt(uint8_t arduinoPin)$/;"	f	class:PCintPort
detachPinChangeInterrupt	PinChangeInt.h	59;"	d
enable	PinChangeInt.h	/^void PCintPort::enable(PCintPin* p, PCIntvoidFuncPtr userFunc, uint8_t mode) {$/;"	f	class:PCintPort
errSum_AL	four_drive.c	/^double errSum_AL = 0;$/;"	v
errSum_AR	four_drive.c	/^double errSum_AR = 0;$/;"	v
errSum_BL	four_drive.c	/^double errSum_BL = 0;$/;"	v
errSum_BR	four_drive.c	/^double errSum_BR = 0;$/;"	v
firstPin	PinChangeInt.h	/^	PCintPin*	firstPin;$/;"	m	class:PCintPort
getInterruptedPin	PinChangeInt.h	61;"	d
getPCIntVersion	PinChangeInt.h	/^uint16_t getPCIntVersion () {$/;"	f
go	four_drive.c	/^void go(int d_al,int d_ar,int d_bl,int d_br)$/;"	f
intrCount	PinChangeInt.h	/^	volatile uint8_t intrCount;$/;"	m	class:PCintPort
kd	four_drive.c	/^double kp=1.5, ki=0.00, kd=1.2;$/;"	v
ki	four_drive.c	/^double kp=1.5, ki=0.00, kd=1.2;$/;"	v
kp	four_drive.c	/^double kp=1.5, ki=0.00, kd=1.2;$/;"	v
lastErr_AL	four_drive.c	/^double lastErr_AL = 0;$/;"	v
lastErr_AR	four_drive.c	/^double lastErr_AR = 0;$/;"	v
lastErr_BL	four_drive.c	/^double lastErr_BL = 0;$/;"	v
lastErr_BR	four_drive.c	/^double lastErr_BR = 0;$/;"	v
lastPinView	PinChangeInt.h	/^	volatile uint8_t		lastPinView;$/;"	m	class:PCintPort
lastTime2	four_drive.c	/^int lastTime2;$/;"	v
led_mask	PinChangeInt.h	/^uint8_t led_mask;$/;"	v
led_port	PinChangeInt.h	/^volatile uint8_t *led_port;$/;"	v
ledsetup	PinChangeInt.h	/^void PCintPort::ledsetup(void) {$/;"	f	class:PCintPort
ledsetup_run	PinChangeInt.h	/^boolean ledsetup_run=false;$/;"	v
lookupPortNumToPort	PinChangeInt.h	/^static PCintPort *lookupPortNumToPort( int portNum ) {$/;"	f
loop	four_drive.c	/^void loop()$/;"	f
mask	PinChangeInt.h	/^		uint8_t		mask;$/;"	m	class:PCintPort::PCintPin
mode	PinChangeInt.h	/^		uint8_t 	mode;$/;"	m	class:PCintPort::PCintPin
next	PinChangeInt.h	/^		PCintPin* next;$/;"	m	class:PCintPort::PCintPin
not_led_mask	PinChangeInt.h	/^uint8_t not_led_mask;$/;"	v
num2	four_drive.c	/^String num2;$/;"	v
pcint_multi	PinChangeInt.h	/^	static volatile uint8_t pcint_multi;$/;"	m	class:PCintPort
pcint_multi	PinChangeInt.h	/^volatile uint8_t PCintPort::pcint_multi=0;$/;"	m	class:PCintPort
pid_pre	four_drive.c	/^unsigned long pid_pre;$/;"	v
pinState	PinChangeInt.h	/^	static volatile	uint8_t	pinState;$/;"	m	class:PCintPort
pinState	PinChangeInt.h	/^volatile uint8_t PCintPort::pinState=0;$/;"	m	class:PCintPort
pinmode	PinChangeInt.h	/^	static volatile uint8_t pinmode;$/;"	m	class:PCintPort
pinmode	PinChangeInt.h	/^volatile uint8_t PCintPort::pinmode=0;$/;"	m	class:PCintPort
portA	PinChangeInt.h	/^PCintPort portA=PCintPort(1, 0,PCMSK0); \/\/ port PA==1  (from Arduino.h, Arduino version 1.0)$/;"	v
portB	PinChangeInt.h	/^PCintPort portB=PCintPort(2, 0,PCMSK0); \/\/ port PB==2  (from Arduino.h, Arduino version 1.0)$/;"	v
portB	PinChangeInt.h	/^PCintPort portB=PCintPort(2, 1,PCMSK1); \/\/ port PB==2  (from Arduino.h, Arduino version 1.0)$/;"	v
portC	PinChangeInt.h	/^PCintPort portC=PCintPort(3, 1,PCMSK1); \/\/ port PC==3  (also in pins_arduino.c, Arduino version 022)$/;"	v
portC	PinChangeInt.h	/^PCintPort portC=PCintPort(3, 2,PCMSK2); \/\/ port PC==3  (also in pins_arduino.c, Arduino version 022)$/;"	v
portD	PinChangeInt.h	/^PCintPort portD=PCintPort(4, 2,PCMSK2); \/\/ port PD==4$/;"	v
portD	PinChangeInt.h	/^PCintPort portD=PCintPort(4, 3,PCMSK3); \/\/ port PD==4$/;"	v
portFallingPins	PinChangeInt.h	/^	volatile	uint8_t			portFallingPins;$/;"	m	class:PCintPort
portInputReg	PinChangeInt.h	/^	volatile	uint8_t&		portInputReg;$/;"	m	class:PCintPort
portJ	PinChangeInt.h	/^PCintPort portJ=PCintPort(10,1,PCMSK1); \/\/ port PJ==10 $/;"	v
portK	PinChangeInt.h	/^PCintPort portK=PCintPort(11,2,PCMSK2); \/\/ port PK==11$/;"	v
portPCMask	PinChangeInt.h	/^	volatile	uint8_t&		portPCMask;$/;"	m	class:PCintPort
portRisingPins	PinChangeInt.h	/^	volatile	uint8_t			portRisingPins;$/;"	m	class:PCintPort
preTime	four_drive.c	/^unsigned long preTime;$/;"	v
pwm_al	four_drive.c	/^int pwm_al,pwm_ar,pwm_bl,pwm_br;$/;"	v
pwm_ar	four_drive.c	/^int pwm_al,pwm_ar,pwm_bl,pwm_br;$/;"	v
pwm_bl	four_drive.c	/^int pwm_al,pwm_ar,pwm_bl,pwm_br;$/;"	v
pwm_br	four_drive.c	/^int pwm_al,pwm_ar,pwm_bl,pwm_br;$/;"	v
pwm_output	four_drive.c	/^void pwm_output(int pwm_al,int pwm_ar,int pwm_bl,int pwm_br)$/;"	f
s_PORT	PinChangeInt.h	/^	static volatile char s_PORT;$/;"	m	class:PCintPort
s_PORT	PinChangeInt.h	/^volatile char	 PCintPort::s_PORT='x';$/;"	m	class:PCintPort
s_changedPins	PinChangeInt.h	/^	static volatile uint8_t s_changedPins;$/;"	m	class:PCintPort
s_changedPins	PinChangeInt.h	/^volatile uint8_t PCintPort::s_changedPins=0;$/;"	m	class:PCintPort
s_count	PinChangeInt.h	/^	static volatile uint8_t s_count;$/;"	m	class:PCintPort
s_count	PinChangeInt.h	/^volatile uint8_t PCintPort::s_count=0;$/;"	m	class:PCintPort
s_currXORlastPinView	PinChangeInt.h	/^	static volatile uint8_t s_currXORlastPinView;$/;"	m	class:PCintPort
s_currXORlastPinView	PinChangeInt.h	/^volatile uint8_t PCintPort::s_currXORlastPinView=0;$/;"	m	class:PCintPort
s_lastPinView	PinChangeInt.h	/^	static volatile uint8_t s_lastPinView;$/;"	m	class:PCintPort
s_lastPinView	PinChangeInt.h	/^volatile uint8_t PCintPort::s_lastPinView=0;$/;"	m	class:PCintPort
s_pmask	PinChangeInt.h	/^	static volatile uint8_t s_pmask;$/;"	m	class:PCintPort
s_pmask	PinChangeInt.h	/^volatile uint8_t PCintPort::s_pmask=0;$/;"	m	class:PCintPort
s_portFallingPins	PinChangeInt.h	/^	static volatile uint8_t s_portFallingPins;$/;"	m	class:PCintPort
s_portFallingPins	PinChangeInt.h	/^volatile uint8_t PCintPort::s_portFallingPins=0;$/;"	m	class:PCintPort
s_portFallingPins_nNCurr	PinChangeInt.h	/^	static volatile uint8_t s_portFallingPins_nNCurr;$/;"	m	class:PCintPort
s_portFallingPins_nNCurr	PinChangeInt.h	/^volatile uint8_t PCintPort::s_portFallingPins_nNCurr=0;$/;"	m	class:PCintPort
s_portRisingPins	PinChangeInt.h	/^	static volatile uint8_t s_portRisingPins;$/;"	m	class:PCintPort
s_portRisingPins	PinChangeInt.h	/^volatile uint8_t PCintPort::s_portRisingPins=0;$/;"	m	class:PCintPort
s_portRisingPins_nCurr	PinChangeInt.h	/^	static volatile uint8_t s_portRisingPins_nCurr;$/;"	m	class:PCintPort
s_portRisingPins_nCurr	PinChangeInt.h	/^volatile uint8_t PCintPort::s_portRisingPins_nCurr=0;$/;"	m	class:PCintPort
setup	four_drive.c	/^void setup ()$/;"	f
spd	four_drive.c	/^double spd=140;$/;"	v
speedAL	four_drive.c	/^double speedAL; $/;"	v
speedAR	four_drive.c	/^double speedAR;$/;"	v
speedBL	four_drive.c	/^double speedBL;$/;"	v
speedBR	four_drive.c	/^double speedBR;$/;"	v
speeds	four_drive.c	/^double speeds=0; \/\/角度平衡点，PWM差，死区，PWM1，PWM2$/;"	v
state	four_drive.c	/^unsigned int state = 0;$/;"	v
testPID	four_drive.c	/^    void testPID()$/;"	f
words1	four_drive.c	/^String words1;$/;"	v
